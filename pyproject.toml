[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "nzrapi"
version = "0.3.0"
description = "Modern async Python framework for AI APIs with native Model Context Protocol (MCP) support"
authors = [
    {name = "NzrApi Team", email = "alairjt@gmail.com"},
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
keywords = ["api", "ai", "mcp", "async", "framework", "n8n", "machine-learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: AsyncIO",
]

dependencies = [
    "uvicorn[standard]>=0.15.0,<0.29.0",
    "openai>=1.0.0,<2.0.0",
    "starlette>=0.27.0",
    "sqlalchemy[asyncio]>=2.0.0",
    "asyncpg>=0.28.0",
    "aiosqlite>=0.19.0",
    "pydantic>=2.7.1",
    "python-dotenv>=1.0.1",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "alembic>=1.12.0",
    "aiofiles>=23.0.0",
    "email-validator>=2.0.0",
    "Jinja2>=3.1.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "asgi-lifespan>=2.1.0",
    "httpx>=0.25.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.6.0",
    "pre-commit>=3.5.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocs-mermaid2-plugin>=1.1.0",
]
ai = [
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "transformers>=4.30.0",
    "torch>=2.0.0",
]
monitoring = [
    "prometheus-client>=0.17.0",
    "structlog>=23.0.0",
    "sentry-sdk>=1.35.0",
]
redis = [
    "redis>=5.0.0",
    "aioredis>=2.0.0",
]

[project.scripts]
nzrapi = "nzrapi.cli:app"

[project.urls]
Homepage = "https://github.com/suportly/nzrapi_framework"
Documentation = "https://nzrapi.readthedocs.io"
Repository = "https://github.com/suportly/nzrapi_framework"
"Bug Tracker" = "https://github.com/suportly/nzrapi_framework/issues"
Changelog = "https://github.com/suportly/nzrapi_framework/blob/main/CHANGELOG.md"

[tool.hatch.version]
path = "nzrapi/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["nzrapi"]

[tool.hatch.build.targets.sdist]
include = [
    "/nzrapi",
    "/templates",
    "/tests",
    "/examples",
    "/docs",
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["nzrapi"]
omit = [
    "*/tests/*",
    "*/examples/*",
    "*/templates/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 120
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | templates
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
known_first_party = ["nzrapi"]
skip_glob = ["*/migrations/*"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = false
ignore_missing_imports = true
warn_unused_ignores = false
warn_redundant_casts = false
warn_unused_configs = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false
strict_optional = false
show_error_codes = true
exclude = ["templates/"]

[[tool.mypy.overrides]]
module = [
    "tests.*",
    "examples.*",
    "templates.*",
]
ignore_errors = true

[tool.flake8]
max-line-length = 120
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long
    "W503",  # line break before binary operator
    "F401",  # imported but unused (common in examples and templates)
    "F841",  # local variable assigned but never used
    "W293",  # blank line contains whitespace
    "W291",  # trailing whitespace
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg",
    "templates",  # exclude template files with Jinja2 syntax
]
per-file-ignores = [
    "__init__.py:F401",
    "tests/*:D,F401,F841",
    "examples/*:F401,F841",
]